<?php

/**
 * @file
 * packery.module
 */

use Drupal\packery\Entity\PackeryGroup;

/**
 * Implements hook_theme().
 */
function packery_theme() {
  return array(
    'packery' => array(
      'function' => 'theme_packery',
      'variables' => array('items' => array(), 'settings' => array()),
      'file' => 'theme/packery.theme.inc',
    ),
    'packery_item' => array(
      'variables' => array('item' => array(), 'attributes' => array())
    ),
    'packery_wrapper' => array(
      'variables' => array('output' => array(), 'attributes' => array())
    )
  );
}

/**
 * Returns Packery settings group to initialize.
 *
 * @param $id
 */
function packery_settings($id) {
  $config = packery_load($id);
  $settings = $config->getSettings();

  $group = array(
    'id' => $config->id(),
    'label' => $config->label(),
    'settings' => array(
      'itemSelector' => $settings['item_selector'],
      'columnWidth' => $settings['column_width'],
      'rowHeight' => $settings['row_height'],
      'gutter' => $settings['gutter'],
      'percentPosition' => (boolean)$settings['percent_position'],
      'stamp' => $settings['stamp'],
      'isHorizontal' => (boolean)$settings['is_horizontal'],
      'isOriginLeft' => (boolean)$settings['is_origin_left'],
      'isOriginTop' => (boolean)$settings['is_origin_top'],
      'transitionDuration' => $settings['transition_duration'],
      'containerStyle' => $settings['container_style'],
      'isResizeBound' => (boolean)$settings['is_resize_bound'],
      'isInitLayout' => (boolean)$settings['is_init_layout']
    ),
    'extend' => array(
      'images_loaded' => $settings['images_loaded'] 
    )
  );

  // Allow alter on group settings.
  \Drupal::moduleHandler()->alter('settings', $group);

  return $group;
}

/**
 * Returns Packery settings group by id.
 *
 * @param $id
 * @return \Drupal\Core\Entity\EntityInterface|static
 */
function packery_load($id) {
  return PackeryGroup::load($id);
}

/**
 * Returns multiple Packery settings groups.
 *
 * @return \Drupal\Core\Entity\EntityInterface|static
 */
function packery_load_multiple($ids = NULL) {
  return PackeryGroup::loadMultiple($ids);
}

/**
 * Returns a list of all available settings groups.
 */
function packery_settings_list() {
  $options = array();

  foreach (packery_load_multiple() as $group) {
    $options[$group->id()] = $group->label();
  }

  return $options;
}

/**
 * Implements hook_form_alter().
 */
function packery_form_packery_group_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  if ($form['id']['#default_value'] == 'default_group') {
    hide($form['actions']['delete']);
  }
}
