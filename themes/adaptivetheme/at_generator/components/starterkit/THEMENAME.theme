<?php

/**
 * Add dynamic library definitions.
 *
 * Modules may implement this hook to add dynamic library definitions. Static
 * libraries, which do not depend on any runtime information, should be declared
 * in a modulename.libraries.yml file instead.
 *
 * @return array[]
 *   An array of library definitions to register, keyed by library ID. The
 *   library ID will be prefixed with the module name automatically.
 *
 * @see core.libraries.yml
 * @see hook_library_info_alter()
 */
function HOOK_library_info_build() {
  $libraries = [];
  $theme = 'HOOK';
  $theme_registry = \Drupal::service('theme.registry')->get();

  // Add a library whose information changes depending on certain conditions.
  $libraries[$theme . '.layout.page'] = [
    'css' => [
      'layout' => [
        'styles/css/generated/' . $theme . '.layout.page.css' => [],
      ],
    ],
  ];

  foreach ($theme_registry as $key => $values) {
    if (substr($key, 0, 6) == 'page__') {
      $suggestion = str_replace('_', '-', $key);
      $libraries[$theme . '.layout.' . $key] = [
        'css' => [
          'layout' => [
            'styles/css/generated/' . $theme . '.layout.'  . $suggestion . '.css' => [],
          ],
        ],
      ];
    }
  }

  return $libraries;
}

/**
 * Preprocess variables for html templates.
 */
/* -- Delete this line if you want to use this function
function HOOK_preprocess_html(&$variables) {
}
// */

/**
 * Preprocess variables for page templates.
 */
/* -- Delete this line if you want to use this function
function HOOK_preprocess_page(&$variables) {
}
// */

/**
 * Preprocess variables for field templates.
 */
/* -- Delete this line if you want to use this function
function HOOK_preprocess_field(&$variables) {
}
// */

/**
 * Preprocess variables for node templates.
 */
/* -- Delete this line if you want to use this function
function HOOK_preprocess_node(&$variables) {
}
// */

/**
 * Preprocess variables for comment templates.
 */
/* -- Delete this line if you want to use this function
function HOOK_preprocess_comment(&$variables) {
}
// */

/**
 * Preprocess variables for block templates.
 */
/* -- Delete this line if you want to use this function
function HOOK_preprocess_block(&$variables) {
}
// */
