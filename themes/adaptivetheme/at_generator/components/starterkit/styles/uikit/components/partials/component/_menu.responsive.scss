/**
 * Responsive menu styles.
 *
 * Mixins provide the basic struture and a base style (not much), the rest
 * is up to you, add colors, borders, padding and so on. Icons such as
 * the hamburger and arrows are set in variables in _variables.scss, and you
 * use the color varaibles for menus from there also.
 *
 * Menu styles are set in Appearance settings using the Responsive Menus extension.
 * There you select a block, breakpoint, a default style and a responsive style.
 * You can safely remove mixins from this file if you not going to use them later
 * on, and want to save a few bytes in stylsheet size.
 *
 * Each mixin takes one or more parameters. Use these to customize the basic struture
 * of the menu, or call options, for example you can place the offcanvas menu on the
 * left or right.
 *
 * Do not import into breakpoints unless you are not using the Responsive Menu
 * settings in Appearance Extensions, in which case you will need to load the
 * at_core/at.responsivemenus library and provide it's required drupalSettings.
 *
 * Breakpoints are handled in matchMedia using Enquire.
 *
 * Responsive styles are a combination of three things:
 *  1. Sass/CSS defined here (with breakpoints etc).
 *  2. jQuery: at.responsiveMenus.js which adds/toggles classes etc.
 *  3. Theme settings as set in your themes extention settings.
 ============================================================================ */

// Global styles for the navbar region.
.rm-region {
  padding: 0;
  margin: 0;

  // Visually hide contextual links, they can get in the way of responsive menu styles.
  .contextual-region {
    position: static;
    .contextual {
      @include visually-hidden;
    }
  }
}


// Remove any rounded corners applied to these menu styles.
.ms-dropmenu,
.ms-horizonal,
.ms-offcanvas,
.ms-meganav {
  .rm-block .menu a {
    //border-radius: 0 !important;
  }
}
.ms-overlay .block__title {
  //border-radius: 0 !important;
}


// Provide a consistant style for visible click handles.
.rm-toggle  {
  @include adjust-font-size-to($medium);
  @include output-rhythm(padding, $xx-small $medium);
  margin: 0;
  cursor: pointer;

  span {}

  &:before,
  &:after {
    display: none;

    // Wait for FontAwesome to load.
    .fa-loaded & {
      display: inline-block;
    }
  }
}


// Provide a reasonbly consistant menu style accross all menu types,
// you may need to tweak some types due to the differences in layout
// and overall design of the menu.
.rm-block__content {
  .menu {
    position: relative;

    > .menu__item {
      z-index: 100;
    }
  }

  &__item {
    position: relative;
    vertical-align: middle;
    @include adjust-font-size-to($medium); // explicitly set the font-size since the container may be font-size 0

    &--active-trail > .menu__link {
    }

    // Strip border top from nested items.
    &:first-child .menu__link {
      border-top: 0;
    }
  }

  .menu__link {
    transition: $global-transition;
    margin: 0;
    border: 0;

    &:after,
    &:before {}

    &:active {}

    &:hover,
    &:focus {
      text-decoration: none;
    }

    &.active {
      // Match Drupal base path for frontpage/home links
      &[href="/"] {
        &:hover,
        &:focus {}
      }
    }
  }
}


// Mitigate any unwanted space in specific regions.
.pr-navbar__navbar,
.pr-leaderboard__leaderboard {
  .rm-block {
    margin: 0;
    padding: 0;
  }
}


